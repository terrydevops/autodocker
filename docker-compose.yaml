version: '3.0'
services:
  #1.prometheus
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    volumes:
      - $PWD/config/prometheus.yml:/etc/prometheus/prometheus.yml
      - $PWD/config/rules:/etc/prometheus/rules
      # - $PWD/config/targets:/etc/prometheus/targets
    command:
      - --web.enable-lifecycle
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    networks:
      - webapp
    environment:
      - TZ=Asia/Shanghai

  #2.alertmanager
  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    restart: always
    volumes:
      - $PWD/config/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      # - $PWD/config/template:/alertmanager/template
    ports:
      - 9093:9093
    networks:
      - webapp
    environment:
      - TZ=Australia/Sydney
  #3.cadvisor | use mon-net as different network to support MacOS
  cadvisor:  
    image: gcr.io/cadvisor/cadvisor:v0.49.1 
    container_name: cadvisor  
    privileged: true  
    ports:  
      - "8080:8080"  
    networks:
      - mon-net
    volumes:  
      - /:/rootfs:ro  
      - /var/run:/var/run:ro  
      - /sys:/sys:ro  
      - /var/lib/docker/:/var/lib/docker:ro  
      - /dev/disk/:/dev/disk:ro  
    devices:  
      - /dev/kmsg  
    restart: unless-stopped 

  webapp:
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - webapp
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '0.5'
          memory: 60M
        reservations:
          cpus: '0.1'
          memory: 6M

  nginx:
    image: nginx:latest
    networks:
      - webapp
    ports:
      - "8088:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf

  # nginx-prometheus-exporter:
  #   image: nginx/nginx-prometheus-exporter:latest
  #   networks:
  #     - webapp
  #   ports:
  #     - "9113:9113"
  #   command: --nginx.scrape-uri=http://nginx:80/stub_status
  #   depends_on:
  #     - nginx
         
networks:
  webapp:
    driver: bridge
  mon-net:
    driver: bridge


    
